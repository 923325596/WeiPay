__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../../node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/master/Documents/work/WeiPay/src/components/customPageNavs/ContactBackWithMenuNav.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _reactNavigation = _require(_dependencyMap[3], "react-navigation");

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        ContactBackWithMenuNav: {
            displayName: "ContactBackWithMenuNav"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/master/Documents/work/WeiPay/src/components/customPageNavs/ContactBackWithMenuNav.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var ContactBackWithMenuNav = _wrapComponent("ContactBackWithMenuNav")(function (_Component) {
        _inherits(ContactBackWithMenuNav, _Component);

        function ContactBackWithMenuNav() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, ContactBackWithMenuNav);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ContactBackWithMenuNav.__proto__ || Object.getPrototypeOf(ContactBackWithMenuNav)).call.apply(_ref, [this].concat(args))), _this), _this.navigateBack = function () {
                if (typeof _this.props.backPage == 'undefined') {
                    _this.props.navigation.goBack();
                } else {
                    var navigateToPassphrase = _reactNavigation.NavigationActions.navigate({
                        routeName: _this.props.backPage
                    });

                    _this.props.navigation.dispatch(navigateToPassphrase);
                }
            }, _this.navigateMenu = function () {
                var navigateToPassphrase = _reactNavigation.NavigationActions.navigate({
                    routeName: "DrawerOpen"
                });

                _this.props.navigation.dispatch(navigateToPassphrase);
            }, _temp), _possibleConstructorReturn(_this, _ret);
        }

        _createClass(ContactBackWithMenuNav, [{
            key: "render",
            value: function render() {
                return _react3.default.createElement(
                    _reactNative.View,
                    {
                        style: styles.container,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 29
                        }
                    },
                    this.props.showBack ? _react3.default.createElement(
                        _reactNative.View,
                        {
                            style: [styles.boxContainer, styles.boxOne],
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 31
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.TouchableOpacity,
                            {
                                onPress: this.props.backButton,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 32
                                }
                            },
                            _react3.default.createElement(_reactNative.Image, {
                                source: _require(_dependencyMap[4], '../../assets/icons/back.png'),
                                style: styles.btnBack,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 34
                                }
                            })
                        )
                    ) : null,
                    this.props.showMenu ? _react3.default.createElement(
                        _reactNative.View,
                        {
                            style: [styles.boxContainer, styles.boxTwo],
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 41
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.TouchableOpacity,
                            {
                                onPress: this.navigateMenu,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 42
                                }
                            },
                            _react3.default.createElement(_reactNative.Image, {
                                source: _require(_dependencyMap[5], '../../assets/icons/menu.png'),
                                style: styles.btnMenu,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 44
                                }
                            })
                        )
                    ) : null
                );
            }
        }]);

        return ContactBackWithMenuNav;
    }(_react2.Component));

    var styles = _reactNative.StyleSheet.create({
        container: {
            flexDirection: 'row',
            marginTop: _reactNative.Platform.OS === 'ios' ? '3.5%' : '2%',
            marginRight: '9%',
            marginLeft: '9%',
            height: _reactNative.Platform.OS === 'ios' ? 40 : 40,
            justifyContent: 'center'
        },
        boxContainer: {
            flex: 1,
            alignItems: 'center',
            justifyContent: 'center'
        },
        boxOne: {
            alignItems: 'flex-start'
        },
        boxTwo: {
            alignItems: 'flex-end',
            zIndex: 100
        },
        btnBack: {
            height: _reactNative.Dimensions.get('window').height * 0.03,
            width: _reactNative.Dimensions.get('window').width * 0.05
        },
        btnMenu: {
            height: _reactNative.Dimensions.get('window').height * 0.02,
            width: _reactNative.Dimensions.get('window').width * 0.05
        }
    });

    exports.default = ContactBackWithMenuNav;
});