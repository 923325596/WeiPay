__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var convert = _require(_dependencyMap[0], './convert');

    function pbkdf2(password, salt, iterations, keylen, createHmac) {
        var hLen;
        var l = 1;
        var DK = new Uint8Array(keylen);
        var block1 = new Uint8Array(salt.length + 4);
        block1.set(salt);
        var r;
        var T;

        for (var i = 1; i <= l; i++) {
            block1[salt.length] = i >> 24 & 0xff;
            block1[salt.length + 1] = i >> 16 & 0xff;
            block1[salt.length + 2] = i >> 8 & 0xff;
            block1[salt.length + 3] = i & 0xff;
            var U = createHmac(password).update(block1).digest();

            if (!hLen) {
                hLen = U.length;
                T = new Uint8Array(hLen);
                l = Math.ceil(keylen / hLen);
                r = keylen - (l - 1) * hLen;
            }

            T.set(U);

            for (var j = 1; j < iterations; j++) {
                U = createHmac(password).update(U).digest();

                for (var k = 0; k < hLen; k++) {
                    T[k] ^= U[k];
                }
            }

            var destPos = (i - 1) * hLen;
            var len = i === l ? r : hLen;
            DK.set(convert.arrayify(T).slice(0, len), destPos);
        }

        return convert.arrayify(DK);
    }

    module.exports = pbkdf2;
});