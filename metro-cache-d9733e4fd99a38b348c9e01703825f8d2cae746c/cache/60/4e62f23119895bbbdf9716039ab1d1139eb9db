__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../../node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/master/Documents/work/WeiPay/src/components/LinearGradient/LinearButton.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _reactNativeLinearGradient = _require(_dependencyMap[3], "react-native-linear-gradient");

    var _reactNativeLinearGradient2 = _interopRequireDefault(_reactNativeLinearGradient);

    var _reactNativeResponsiveFontsize = _require(_dependencyMap[4], "react-native-responsive-fontsize");

    var _reactNativeResponsiveFontsize2 = _interopRequireDefault(_reactNativeResponsiveFontsize);

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        LinearButton: {
            displayName: "LinearButton"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/master/Documents/work/WeiPay/src/components/LinearGradient/LinearButton.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var LinearButton = _wrapComponent("LinearButton")(function (_Component) {
        _inherits(LinearButton, _Component);

        function LinearButton() {
            _classCallCheck(this, LinearButton);

            return _possibleConstructorReturn(this, (LinearButton.__proto__ || Object.getPrototypeOf(LinearButton)).apply(this, arguments));
        }

        _createClass(LinearButton, [{
            key: "render",
            value: function render() {
                return _react3.default.createElement(
                    _reactNative.View,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 23
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.TouchableOpacity,
                        {
                            onPress: this.props.onClickFunction,
                            disabled: this.props.buttonStateEnabled,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 24
                            }
                        },
                        _react3.default.createElement(
                            _reactNativeLinearGradient2.default,
                            {
                                colors: !this.props.buttonStateEnabled ? gradientColors.Enabled : gradientColors.Disabled,
                                start: {
                                    x: 0,
                                    y: 0
                                },
                                end: {
                                    x: 1,
                                    y: 1
                                },
                                style: [styles.buttonStyles, this.props.customStyles],
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 28
                                }
                            },
                            _react3.default.createElement(
                                _reactNative.Text,
                                {
                                    style: [styles.textStyles, this.props.customTextStyles],
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 33
                                    }
                                },
                                this.props.buttonText
                            )
                        )
                    )
                );
            }
        }]);

        return LinearButton;
    }(_react2.Component));

    var gradientColors = {
        Enabled: ['#04b79f', '#5cfab1'],
        Disabled: ['#a2a3a5', '#e5e5e5']
    };

    var styles = _reactNative.StyleSheet.create({
        buttonStyles: {
            borderRadius: 100,
            alignItems: 'center',
            justifyContent: 'center',
            marginLeft: '9%'
        },
        textStyles: {
            fontFamily: "Cairo-Regular",
            fontSize: (0, _reactNativeResponsiveFontsize2.default)(2.5),
            color: "#ffffff",
            letterSpacing: 0.4
        }
    });

    exports.default = LinearButton;
});