__d(function (global, _require, module, exports, _dependencyMap) {
    'use strict';

    var convert = _require(_dependencyMap[0], './convert');

    var utf8 = _require(_dependencyMap[1], './utf8');

    var keccak256 = _require(_dependencyMap[2], './keccak256');

    var Zeros = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    var Partition = new RegExp("^((.*)\\.)?([^.]+)$");
    var UseSTD3ASCIIRules = new RegExp("^[a-z0-9.-]*$");

    function namehash(name, depth) {
        name = name.toLowerCase();

        if (!name.match(UseSTD3ASCIIRules)) {
            throw new Error('contains invalid UseSTD3ASCIIRules characters');
        }

        var result = Zeros;
        var processed = 0;

        while (name.length && (!depth || processed < depth)) {
            var partition = name.match(Partition);
            var label = utf8.toUtf8Bytes(partition[3]);
            result = keccak256(convert.concat([result, keccak256(label)]));
            name = partition[2] || '';
            processed++;
        }

        return convert.hexlify(result);
    }

    module.exports = namehash;
});