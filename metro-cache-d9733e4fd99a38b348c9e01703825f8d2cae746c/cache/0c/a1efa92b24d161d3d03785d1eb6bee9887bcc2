__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../../../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/master/Documents/work/WeiPay/src/screens/main/tokens/add/NewToken.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactRedux = _require(_dependencyMap[3], "react-redux");

  var _reactNativeElements = _require(_dependencyMap[4], "react-native-elements");

  var _reactNavigation = _require(_dependencyMap[5], "react-navigation");

  var _reactNativeResponsiveFontsize = _require(_dependencyMap[6], "react-native-responsive-fontsize");

  var _reactNativeResponsiveFontsize2 = _interopRequireDefault(_reactNativeResponsiveFontsize);

  var _ActionCreator = _require(_dependencyMap[7], "../../../../actions/ActionCreator");

  var actions = _interopRequireWildcard(_ActionCreator);

  var _LinearButton = _require(_dependencyMap[8], "../../../../components/LinearGradient/LinearButton");

  var _LinearButton2 = _interopRequireDefault(_LinearButton);

  var _BoxShadowCard = _require(_dependencyMap[9], "../../../../components/ShadowCards/BoxShadowCard");

  var _BoxShadowCard2 = _interopRequireDefault(_BoxShadowCard);

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    NewToken: {
      displayName: "NewToken"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/master/Documents/work/WeiPay/src/screens/main/tokens/add/NewToken.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var ethers = _require(_dependencyMap[10], 'ethers');

  var NewToken = _wrapComponent("NewToken")(function (_Component) {
    _inherits(NewToken, _Component);

    function NewToken() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, NewToken);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = NewToken.__proto__ || Object.getPrototypeOf(NewToken)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        tokenName: _this.props.newTokenName,
        tokenAddress: _this.props.newTokenAddress
      }, _this.complete = function () {
        if (_this.state.tokenAddress !== '' && _this.state.tokenName !== '') {
          _this.setState({
            tokenAddress: ''
          });

          _this.setState({
            tokenName: ''
          });

          _this.props.completeNewToken();
        }
      }, _this.navigate = function () {
        _this.props.qrScannerInvoker('AddTokenFunctionality');

        var navigateToQRScanner = _reactNavigation.NavigationActions.navigate({
          routeName: 'QCodeScanner'
        });

        _this.props.navigation.dispatch(navigateToQRScanner);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(NewToken, [{
      key: "updateAddress",
      value: function updateAddress(address) {
        this.setState({
          tokenAddress: address
        });
        this.props.updateNewTokenAddress(address);
      }
    }, {
      key: "updateName",
      value: function updateName(name) {
        this.setState({
          tokenName: name
        });
        this.props.updateNewTokenName(name);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react3.default.createElement(
          _reactNative.SafeAreaView,
          {
            style: styles.safeAreaView,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 59
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            {
              style: styles.mainContainer,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 60
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              {
                style: styles.boxShadowContainer,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 62
                }
              },
              _react3.default.createElement(
                _BoxShadowCard2.default,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 63
                  }
                },
                _react3.default.createElement(
                  _reactNative.Text,
                  {
                    style: styles.cardText,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 64
                    }
                  },
                  "Enter ERC20 Token Address with it's name"
                ),
                _react3.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.barcodeImageContainer,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 67
                    }
                  },
                  _react3.default.createElement(
                    _reactNative.TouchableOpacity,
                    {
                      onPress: function onPress() {
                        return _this2.navigate();
                      },
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 68
                      }
                    },
                    _react3.default.createElement(_reactNative.Image, {
                      source: _require(_dependencyMap[11], '../../../../assets/icons/barcode.png'),
                      style: styles.barcodeImage,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 69
                      }
                    })
                  )
                ),
                _react3.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.formInputContainer,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 75
                    }
                  },
                  _react3.default.createElement(_reactNativeElements.FormInput, {
                    placeholder: 'Token Address',
                    onChangeText: this.updateAddress.bind(this),
                    inputStyle: styles.formAddress,
                    value: this.state.tokenAddress,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 76
                    }
                  })
                ),
                _react3.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.formInputContainer,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 85
                    }
                  },
                  _react3.default.createElement(_reactNativeElements.FormInput, {
                    placeholder: 'Token Symbol',
                    onChangeText: this.updateName.bind(this),
                    inputStyle: styles.formAddress,
                    value: this.state.tokenName,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 86
                    }
                  })
                )
              )
            ),
            _react3.default.createElement(
              _reactNative.View,
              {
                style: styles.btnContainer,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 98
                }
              },
              _react3.default.createElement(_LinearButton2.default, {
                onClickFunction: this.complete,
                buttonText: "Add New Token",
                customStyles: styles.button,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 100
                }
              }),
              _react3.default.createElement(
                _reactNative.View,
                {
                  style: styles.footerGrandparentContainer,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 106
                  }
                },
                _react3.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.footerParentContainer,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 107
                    }
                  },
                  _react3.default.createElement(
                    _reactNative.Text,
                    {
                      style: styles.textFooter,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 108
                      }
                    },
                    "Powered by ChainSafe "
                  )
                )
              )
            )
          )
        );
      }
    }]);

    return NewToken;
  }(_react2.Component));

  var styles = _reactNative.StyleSheet.create({
    safeAreaView: {
      flex: 1,
      backgroundColor: '#fafbfe'
    },
    navContainer: {
      flex: 0.65
    },
    navHeaderContainer: {
      flex: 0.3
    },
    mainContainer: {
      flex: 1,
      backgroundColor: '#fafbfe',
      justifyContent: 'center',
      width: '100%'
    },
    activityContainer: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center',
      alignContent: 'center'
    },
    activityHorizontal: {
      flexDirection: 'column',
      alignItems: 'center'
    },
    warningText: {
      color: 'white',
      fontSize: (0, _reactNativeResponsiveFontsize2.default)(2.8),
      fontFamily: 'Cairo-Light',
      letterSpacing: 0.4,
      paddingBottom: '10%',
      paddingLeft: '10%',
      paddingRight: '10%'
    },
    maliciousCommentText: {
      color: 'red',
      fontSize: (0, _reactNativeResponsiveFontsize2.default)(2.1),
      marginLeft: '5%'
    },
    boxShadowContainer: {
      flex: 1.25,
      marginLeft: '9%',
      marginRight: '9%',
      marginTop: '10%'
    },
    contentContainer: {
      width: '82%',
      flex: 1
    },
    cardText: {
      paddingBottom: '5%',
      paddingTop: '10%',
      paddingLeft: '10%',
      paddingRight: '10%',
      fontFamily: 'WorkSans-Light',
      fontSize: (0, _reactNativeResponsiveFontsize2.default)(2.4),
      color: '#000000',
      letterSpacing: 0.4
    },
    barcodeImageContainer: {
      paddingTop: '5%',
      paddingBottom: '5%',
      paddingLeft: '10%'
    },
    barcodeImage: {
      height: _reactNative.Dimensions.get('window').height * 0.1,
      width: _reactNative.Dimensions.get('window').width * 0.18
    },
    formAmount: {
      width: '90%',
      fontSize: (0, _reactNativeResponsiveFontsize2.default)(2.2),
      color: '#12c1a2',
      flexWrap: 'wrap',
      fontFamily: 'WorkSans-Light',
      letterSpacing: 0.4
    },
    formAddress: {
      width: '90%',
      fontSize: (0, _reactNativeResponsiveFontsize2.default)(2.2),
      color: '#12c1a2',
      flexWrap: 'wrap',
      fontFamily: 'WorkSans-Light',
      letterSpacing: 0.4,
      paddingBottom: '3%'
    },
    displayFeeText: {
      width: '90%',
      marginLeft: '10.5%',
      fontSize: (0, _reactNativeResponsiveFontsize2.default)(1.4),
      letterSpacing: 0.3,
      fontFamily: 'WorkSans-Light',
      marginTop: '2%'
    },
    formInputContainer: {
      marginLeft: '4.5%',
      marginRight: '4.5%'
    },
    btnContainer: {
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'flex-end',
      width: '82%',
      alignContent: 'center',
      marginLeft: '9%',
      marginRight: '9%'
    },
    button: {
      width: '82%',
      height: _reactNative.Dimensions.get('window').height * 0.082
    },
    footerGrandparentContainer: {
      alignItems: 'center',
      marginBottom: '5%',
      marginTop: '5%'
    },
    footerParentContainer: {
      alignItems: 'center'
    },
    textFooter: {
      fontFamily: 'WorkSans-Regular',
      fontSize: (0, _reactNativeResponsiveFontsize2.default)(1.7),
      color: '#c0c0c0',
      letterSpacing: 0.5
    }
  });

  var mapStateToProps = function mapStateToProps(state) {
    return {
      newTokenAddress: state.newWallet.newTokenAddress,
      newTokenName: state.newWallet.newTokenName,
      tokens: state.newWallet.tokens,
      QrCodeData: state.newWallet.QrData
    };
  };

  exports.default = (0, _reactRedux.connect)(mapStateToProps, actions)(NewToken);
});