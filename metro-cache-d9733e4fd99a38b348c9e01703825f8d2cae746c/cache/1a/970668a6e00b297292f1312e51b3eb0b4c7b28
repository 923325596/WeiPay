__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../../../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/master/Documents/work/WeiPay/src/screens/main/tokens/add/Tokens.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactNativeElements = _require(_dependencyMap[3], "react-native-elements");

  var _reactRedux = _require(_dependencyMap[4], "react-redux");

  var _ActionCreator = _require(_dependencyMap[5], "../../../../actions/ActionCreator");

  var actions = _interopRequireWildcard(_ActionCreator);

  var _reactNavigation = _require(_dependencyMap[6], "react-navigation");

  var _reactNativeResponsiveFontsize = _require(_dependencyMap[7], "react-native-responsive-fontsize");

  var _reactNativeResponsiveFontsize2 = _interopRequireDefault(_reactNativeResponsiveFontsize);

  var _CoinList = _require(_dependencyMap[8], "../../../../components/tokens/CoinList");

  var _CoinList2 = _interopRequireDefault(_CoinList);

  var _LinearButton = _require(_dependencyMap[9], "../../../../components/LinearGradient/LinearButton");

  var _LinearButton2 = _interopRequireDefault(_LinearButton);

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    Coins: {
      displayName: "Coins"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/master/Documents/work/WeiPay/src/screens/main/tokens/add/Tokens.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var Coins = _wrapComponent("Coins")(function (_Component) {
    _inherits(Coins, _Component);

    function Coins(props) {
      _classCallCheck(this, Coins);

      var _this = _possibleConstructorReturn(this, (Coins.__proto__ || Object.getPrototypeOf(Coins)).call(this, props));

      _this.navigate = function () {
        var navigateToPassphrase = _reactNavigation.NavigationActions.reset({
          index: 0,
          actions: [_reactNavigation.NavigationActions.navigate({
            routeName: 'portfolioScreen'
          })]
        });

        _this.props.navigation.dispatch(navigateToPassphrase);
      };

      _this.addCustomToken = function () {
        _this.props.addTokenFromList(_this.state.searchedTokenName, _this.state.tokens[_this.state.searchedTokenName]);

        _this.setState({
          searchedTokenName: "",
          refreshing: true
        });
      };

      console.log(_this.props.newWallet.tokens);
      _this.state = {
        tokens: _this.props.newWallet.allTokens,
        searchedTokenName: "",
        refreshing: false
      };
      return _this;
    }

    _createClass(Coins, [{
      key: "handleChangeText",
      value: function handleChangeText(input) {
        try {
          console.log("----------");
          console.log(this.state.tokens[input]);
          this.setState({
            searchedTokenName: input
          });
          console.log("----------");
        } catch (error) {
          console.log("DNE");
        }
      }
    }, {
      key: "generateTokenList",
      value: function generateTokenList() {
        this.setState({
          refreshing: false
        });
        return _react3.default.createElement(_CoinList2.default, {
          type: 'tokens',
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.SafeAreaView,
          {
            style: styles.safeAreaView,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 78
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            {
              style: styles.mainContainer,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 79
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              {
                style: {
                  flex: 1
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 81
                }
              },
              _react3.default.createElement(_reactNativeElements.SearchBar, {
                value: this.state.searchedTokenName,
                lightTheme: true,
                clearIcon: true,
                searchIcon: true,
                containerStyle: {
                  backgroundColor: '#fafbfe'
                },
                onChangeText: this.handleChangeText.bind(this),
                placeholder: "Enter token symbol",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 82
                }
              })
            ),
            _react3.default.createElement(
              _reactNative.View,
              {
                style: {
                  flex: 1
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 92
                }
              },
              _react3.default.createElement(
                _reactNative.Text,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 93
                  }
                },
                this.state.searchedTokenName
              )
            ),
            _react3.default.createElement(
              _reactNative.View,
              {
                style: {
                  flex: 1
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 95
                }
              },
              _react3.default.createElement(_LinearButton2.default, {
                onClickFunction: this.addCustomToken,
                buttonText: "Add this token",
                customStyles: styles.button,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 96
                }
              })
            ),
            _react3.default.createElement(
              _reactNative.View,
              {
                style: styles.coinListContainer,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 102
                }
              },
              _react3.default.createElement(
                _reactNative.ScrollView,
                {
                  refreshControl: _react3.default.createElement(_reactNative.RefreshControl, {
                    refreshing: this.state.refreshing,
                    onRefresh: this.generateTokenList,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 105
                    }
                  }),
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 103
                  }
                },
                _react3.default.createElement(_CoinList2.default, {
                  type: 'tokens',
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 111
                  }
                })
              )
            ),
            _react3.default.createElement(
              _reactNative.View,
              {
                style: styles.btnContainer,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 114
                }
              },
              _react3.default.createElement(_LinearButton2.default, {
                onClickFunction: this.navigate,
                buttonText: "Add Tokens",
                customStyles: styles.button,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 115
                }
              }),
              _react3.default.createElement(
                _reactNative.View,
                {
                  style: styles.footerGrandparentContainer,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 120
                  }
                },
                _react3.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.footerParentContainer,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 121
                    }
                  },
                  _react3.default.createElement(
                    _reactNative.Text,
                    {
                      style: styles.textFooter,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 122
                      }
                    },
                    "Powered by ChainSafe "
                  )
                )
              )
            )
          )
        );
      }
    }]);

    return Coins;
  }(_react2.Component));

  var styles = _reactNative.StyleSheet.create({
    safeAreaView: {
      flex: 1,
      backgroundColor: '#fafbfe'
    },
    mainContainer: {
      flex: 1,
      backgroundColor: '#fafbfe'
    },
    NavBarButton: {
      flex: 0.65,
      justifyContent: 'center',
      paddingBottom: '2%'
    },
    tabNavContainer: {
      flex: 0.3,
      justifyContent: 'center',
      marginBottom: '2%'
    },
    coinListContainer: {
      alignItems: 'stretch',
      marginLeft: '9%',
      marginRight: '9%',
      flex: 5,
      paddingBottom: '2.5%',
      paddingTop: '2.5%'
    },
    btnContainer: {
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'flex-end'
    },
    button: {
      width: '82%',
      height: _reactNative.Dimensions.get('window').height * 0.082
    },
    footerGrandparentContainer: {
      alignItems: 'center',
      marginBottom: '3%',
      marginTop: '3%'
    },
    footerParentContainer: {
      alignItems: 'center'
    },
    textFooter: {
      fontFamily: 'WorkSans-Regular',
      fontSize: (0, _reactNativeResponsiveFontsize2.default)(1.7),
      color: '#c0c0c0',
      letterSpacing: 0.5
    }
  });

  function mapStateToProps(_ref) {
    var newWallet = _ref.newWallet;
    return {
      newWallet: newWallet
    };
  }

  exports.default = (0, _reactRedux.connect)(mapStateToProps, actions)(Coins);
});