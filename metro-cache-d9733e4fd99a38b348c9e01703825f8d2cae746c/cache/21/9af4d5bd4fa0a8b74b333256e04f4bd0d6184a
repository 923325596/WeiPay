__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../../../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/master/Documents/work/WeiPay/src/screens/main/menu/contacts/ContactsTab.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactNavigation = _require(_dependencyMap[3], "react-navigation");

  var _reactNativeElements = _require(_dependencyMap[4], "react-native-elements");

  var _reactRedux = _require(_dependencyMap[5], "react-redux");

  var _lodash = _require(_dependencyMap[6], "lodash");

  var _lodash2 = _interopRequireDefault(_lodash);

  var _AddFirstContact = _require(_dependencyMap[7], "./add/AddFirstContact");

  var _AddFirstContact2 = _interopRequireDefault(_AddFirstContact);

  var _BackWithMenuNav = _require(_dependencyMap[8], "../../../../components/customPageNavs/BackWithMenuNav");

  var _BackWithMenuNav2 = _interopRequireDefault(_BackWithMenuNav);

  var _ContactTabNavigator = _require(_dependencyMap[9], "../../../../components/customPageNavs/ContactTabNavigator");

  var _ContactTabNavigator2 = _interopRequireDefault(_ContactTabNavigator);

  var _SelectedContact = _require(_dependencyMap[10], "./SelectedContact");

  var _SelectedContact2 = _interopRequireDefault(_SelectedContact);

  var _reactNativeResponsiveFontsize = _require(_dependencyMap[11], "react-native-responsive-fontsize");

  var _reactNativeResponsiveFontsize2 = _interopRequireDefault(_reactNativeResponsiveFontsize);

  var _BoxShadowCard = _require(_dependencyMap[12], "../../../../components/ShadowCards/BoxShadowCard");

  var _BoxShadowCard2 = _interopRequireDefault(_BoxShadowCard);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    ContactsTab: {
      displayName: "ContactsTab"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/master/Documents/work/WeiPay/src/screens/main/menu/contacts/ContactsTab.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var ContactsTab = _wrapComponent("ContactsTab")(function (_Component) {
    _inherits(ContactsTab, _Component);

    function ContactsTab(props) {
      _classCallCheck(this, ContactsTab);

      var _this = _possibleConstructorReturn(this, (ContactsTab.__proto__ || Object.getPrototypeOf(ContactsTab)).call(this, props));

      _this.renderRow = function () {
        return _this.props.contacts.map(function (contact) {
          return _react3.default.createElement(
            _reactNative.View,
            {
              style: styles.mainListItemContainer,
              key: contact.name,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 64
              }
            },
            _react3.default.createElement(
              _BoxShadowCard2.default,
              {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 65
                }
              },
              _react3.default.createElement(_reactNativeElements.ListItem, {
                chevronColor: "#000000",
                key: contact.name,
                title: _react3.default.createElement(
                  _reactNative.View,
                  {
                    style: styles.listItemContainer,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 70
                    }
                  },
                  _react3.default.createElement(
                    _reactNative.Text,
                    {
                      style: styles.contactNameText,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 71
                      }
                    },
                    contact.name
                  )
                ),
                containerStyle: styles.containerStyle,
                onPress: function onPress() {
                  _this.props.selectedContactTrue();

                  _this.setState({
                    contact: contact
                  });
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 66
                }
              })
            )
          );
        });
      };

      _this.state = {
        active: true,
        selectedContact: false,
        contact: null
      };
      return _this;
    }

    _createClass(ContactsTab, [{
      key: "componentWillMount",
      value: function componentWillMount() {
        var data = this.props.contacts;
        var ds = new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          }
        });
        this.dataSource = ds.cloneWithRows(data);
      }
    }, {
      key: "componentWillReceiveProps",
      value: function componentWillReceiveProps(nextProps) {
        var data = nextProps.contacts;
        var ds = new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          }
        });
        this.dataSource = ds.cloneWithRows(data);
      }
    }, {
      key: "render",
      value: function render() {
        var show = this.props.contacts.length === 0 ? _react3.default.createElement(_AddFirstContact2.default, {
          setAddContactTab: this.props.setAddContactTab,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 95
          }
        }) : this.props.selectedContact === true ? _react3.default.createElement(_SelectedContact2.default, {
          contact: this.state.contact,
          setSelectedContactFalse: this.props.setSelectedContactFalse,
          navigation: this.props.navigation,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 97
          }
        }) : _react3.default.createElement(
          _reactNative.View,
          {
            style: styles.list,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 99
            }
          },
          this.renderRow()
        );
        return show;
      }
    }]);

    return ContactsTab;
  }(_react2.Component));

  var styles = _reactNative.StyleSheet.create({
    mainContainer: {
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'flex-start',
      paddingTop: '2.5%',
      backgroundColor: "#fafbfe"
    },
    mainListItemContainer: {
      marginTop: '3%',
      height: _reactNative.Dimensions.get('window').height * 0.1,
      width: _reactNative.Dimensions.get('window').width * 0.85
    },
    listItemContainer: {
      flexDirection: 'row',
      justifyContent: "center",
      marginLeft: '5%'
    },
    contactNameText: {
      fontSize: (0, _reactNativeResponsiveFontsize2.default)(2.4),
      fontFamily: "Cairo-Regular",
      alignItems: "flex-start",
      flex: 1,
      width: '90%',
      letterSpacing: 0.5,
      top: '1%'
    },
    containerStyle: {
      borderWidth: 0,
      borderBottomWidth: 0
    },
    contentContainer: {
      marginTop: 25
    },
    form: {
      width: 340
    },
    btnContainer: {
      flex: 1,
      justifyContent: 'flex-end',
      alignItems: 'center'
    },
    listItem: {
      marginTop: '2.5%',
      marginLeft: '0.25%'
    },
    list: {
      marginTop: '4%',
      flex: 1,
      marginLeft: '9%'
    }
  });

  function mapStateToProps(_ref) {
    var contacts = _ref.contacts;
    return {
      contacts: contacts.contacts
    };
  }

  exports.default = (0, _reactRedux.connect)(mapStateToProps)(ContactsTab);
});